// Generated by CoffeeScript 1.7.1
'use strict';
var app;

app = angular.module('emmFrontendApp', ['ngCookies', 'ngResource', 'ngSanitize', 'ngRoute', 'datatables', 'ngStorage']);


/*
 * Customer Route
 */

app.config(function($routeProvider) {
  return $routeProvider.when('/customers/role', {
    templateUrl: 'partials/customers/role',
    controller: 'SettingsCtrl',
    authenticate: true
  }).when('/customers/partner', {
    templateUrl: 'partials/customers/partner',
    controller: 'PartnerCtrl',
    authenticate: true
  });
});


/*
 * Base Route
 */

app.config(function($routeProvider) {
  return $routeProvider.when('/login', {
    templateUrl: 'partials/login',
    controller: 'LoginCtrl',
    authenticate: false
  }).when('/signup', {
    templateUrl: 'partials/signup',
    controller: 'SignupCtrl'
  }).when('/settings', {
    templateUrl: 'partials/settings',
    controller: 'SettingsCtrl',
    authenticate: true
  }).when('/', {
    templateUrl: 'partials/main',
    controller: 'MainCtrl',
    authenticate: true
  }).otherwise({
    redirectTo: '/'
  });
});


/*
 * Other Configuration
 * $locationProvider: 用于配置angularJS中的deep link路径的存储格式。 包含hashPrefix和html5Mode属性
 * $httpProvider: 用于进行$http的配置
 */

app.config(function($locationProvider, $httpProvider) {
  $locationProvider.html5Mode(true);

  /*
   * 当server端返回401错误的时候重定向到/login登陆页面
   */
  return $httpProvider.interceptors.push([
    '$q', '$location', function($q, $location) {
      return {
        responseError: function(response) {
          if (response.status === 401) {
            $location.path('/login');
          }
          return $q.reject(response);
        }
      };
    }
  ]);
});


/*
 * Initialization
 */

app.run(function($rootScope, $location, $http, Auth, $DTDefaultOptions, $sessionStorage) {

  /*
   * 默认左侧侧导航栏为打开状态
   */
  var oLanguage;
  ace.settings.sidebar_collapsed(false);

  /*
   * 如果用户登陆，则发送/api/user/config请求来获取用户基础配置信息
   * 如果用户没登陆，则将配置信息清空
   */
  if (Auth.isLoggedIn()) {
    if ($sessionStorage.config != null) {
      $rootScope.config = $sessionStorage.config;
    } else {
      $http({
        method: 'GET',
        url: '/api/user/config'
      }).success(function(data, status, headers, config) {
        $sessionStorage.config = data;
        return $rootScope.config = data;
      }).error(function(data, status, headers, config) {
        return alert('/api/user/config error');
      });
    }
  } else {
    if ($sessionStorage.config != null) {
      $sessionStorage.$reset();
    }
    $rootScope.config = {
      user: {},
      company: {},
      menus: {}
    };
  }

  /*
   * 配置datatables
   */
  oLanguage = {
    "sLengthMenu": "每页显示 _MENU_ 条记录",
    "sInfo": "从 _START_ 到 _END_ /共 _TOTAL_ 条数据",
    "sInfoEmpty": "没有数据",
    "sInfoFiltered": "(从 _MAX_ 条数据中检索)",
    "oPaginate": {
      "sFirst": "首页",
      "sPrevious": "前一页",
      "sNext": "后一页",
      "sLast": "尾页"
    },
    "sSearch": "搜索: ",
    "sZeroRecords": "没有检索到数据",
    "sProcessing": "<img src='./loading.gif' />"
  };
  $DTDefaultOptions.setLanguage(oLanguage);

  /*
   * 监听route地址的变化，如果route地址需要权限验证，而又未登录，则跳转至login登陆页面
   */
  return $rootScope.$on('$routeChangeStart', function(event, next) {
    var url;
    url = $location.url();
    if (url.indexOf('?') > -1) {
      url = url.substr(0, url.indexOf('?'));
    }
    if (next.authenticate && !Auth.isLoggedIn()) {
      $location.path('/login');
    }
    $rootScope.url = url;
    if (Auth.isLoggedIn() && ($sessionStorage.config == null)) {
      console.log(123);
      $http({
        method: 'GET',
        url: '/api/user/config'
      }).success(function(data, status, headers, config) {
        $sessionStorage.config = data;
        return $rootScope.config = data;
      }).error(function(data, status, headers, config) {
        return alert('/api/user/config error');
      });
    }
    if (!Auth.isLoggedIn()) {
      if ($sessionStorage.config != null) {
        $sessionStorage.$reset();
      }
      $rootScope.config = {
        user: {},
        company: {},
        menus: {}
      };
    }
  });
});
